services:
  mi-mongo:
    container_name: mi-mongo # --name
    networks:
      mongo-node-net: # --net
    ipv4_address: 172.40.0.10
    volumes:
      - mongo-vol:/data/db # --mount
    environment:
      - MYSQL_ROOT_PASSWORD=pass # -e MYSQL_ROOT_PASSWORD=pass
    stdin_open: true # -i
    tty: true # -t
    image: mongo # imagen

  mi-node:
    container_name: mi-node # --name
    networks:
      -mongo-node-net:
        ipv4_address: 172.40.0.11
      -node-nginx-net: # --net
        ipv4_address: 172.80.0.10
    stdin_open: true # -i
    tty: true # -t
    build:
      context: .

  mi-nginx:
    container_name: mi-nginx # --name
    networks:
      node-nginx-net: # --net
    ipv4_address: 172.80.0.11
    ports: -"80:80"
    stdin_open: true # -i
    tty: true # -t
    image: nginx # imagen

networks:
  mongo-node-net: # create
    ipam:
      driver: default # --driver default
      config:
        - subnet: 172.40.0.0/16 # --subnet
  node-nginx-net:
    ipam:
      driver: default
      config:
        - subnet: 172.80.0.0/16

# docker volume create
volumes:
  mongo-vol:
